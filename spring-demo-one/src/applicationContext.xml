<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
    xmlns:context="http://www.springframework.org/schema/context"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context.xsd">

    <!-- Define your beans here -->
    <!--  define the dependency on FortuneService -->
    <bean id="myFortune"
    	class="com.luv2code.springdemo.HappyFortuneService">
    </bean>
    
    <bean id="myCoach" class="com.luv2code.springdemo.CodingCoach">
    	
    	<!-- Setup the constructor injection -->
    	<constructor-arg ref="myFortune" name="aFortuneService"/>
    </bean>
    
    <!--
    I noticed the setter method of the TennisCoach being called when getting the 
    application context. Adding lazy-init="true" stop it from happening until the object is actually needed
    -->
    <bean id="myTennisCoach" class="com.luv2code.springdemo.TennisCoach" lazy-init="true">
    
    	<!-- 
    	Setup the setter injection
    	The Case here is important, the actual property name does not matter, its the setter name
    	A setter with the signature setSomeProperty(...) needs name="someProperty" 
    	-->
    	<property name="fortuneService" ref="myFortune"/>
    </bean>
</beans>





